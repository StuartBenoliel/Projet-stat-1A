multivioplot(X, D1$GroupeACH, parameters = c("Pourcentages de voix Le Pen au 1er Tour",
"Part des individus ayant entre 18 et 24 ans",
"Part des diplômés du supérieur",
"Part des retraités",
"Densité de la population",
"Part des professions intermédiaires"))
multivioplot <- function(table, cat, parameters = colnames(data)) {
nb_col <- length(parameters)
# Conversion des couleurs
# Fonction de conversion des couleurs en hexadécimal
col2hex <- function(col, alpha = 1) {
rgb(t(col2rgb(col)), alpha = alpha * 255, maxColorValue = 255)
}
colors <- c("#E7B800", "#4E84C4", "#FC4E07") # col2hex(col)
# Affichage
plots <- list()
for (i in 1:nb_col) {
plot <- ggplot(table, aes(x = cat, y = .data[[names(table)[i]]],fill = cat)) +
geom_violin() +
geom_jitter(color = "green", alpha = 0.2) + scale_fill_manual(values =c("#E7B800","#4E84C4", "#FC4E07") )+
labs(x = parameters[i],y="")+ theme_bw() + guides(fill = FALSE)
plots[[i]] <- plot
}
plot_grid(plotlist = plots)
}
multivioplot(X, D1$GroupeACH, parameters = c("Pourcentages de voix Le Pen au 1er Tour",
"Part des individus ayant entre 18 et 24 ans",
"Part des diplômés du supérieur",
"Part des retraités",
"Densité de la population",
"Part des professions intermédiaires"))
multivioplot <- function(table, cat, parameters = colnames(data)) {
nb_col <- length(parameters)
# Conversion des couleurs
# Fonction de conversion des couleurs en hexadécimal
col2hex <- function(col, alpha = 1) {
rgb(t(col2rgb(col)), alpha = alpha * 255, maxColorValue = 255)
}
colors <- c("#E7B800", "#4E84C4", "#FC4E07") # col2hex(col)
# Affichage
plots <- list()
for (i in 1:nb_col) {
plot <- ggplot(table, aes(x = cat, y = .data[[names(table)[i]]],fill = cat)) +
geom_violin() +
geom_jitter(color = "black", alpha = 0.2) + scale_fill_manual(values =c("#E7B800","#4E84C4", "#FC4E07") )+
labs(x = parameters[i],y="")+ theme_bw() + guides(fill = FALSE)
plots[[i]] <- plot
}
plot_grid(plotlist = plots)
}
multivioplot(X, D1$GroupeACH, parameters = c("Pourcentages de voix Le Pen au 1er Tour",
"Part des individus ayant entre 18 et 24 ans",
"Part des diplômés du supérieur",
"Part des retraités",
"Densité de la population",
"Part des professions intermédiaires"))
multivioplot <- function(table, cat, parameters = colnames(data),leg) {
nb_col <- length(parameters)
# Conversion des couleurs
# Fonction de conversion des couleurs en hexadécimal
col2hex <- function(col, alpha = 1) {
rgb(t(col2rgb(col)), alpha = alpha * 255, maxColorValue = 255)
}
colors <- c("#E7B800", "#4E84C4", "#FC4E07") # col2hex(col)
# Affichage
plots <- list()
for (i in 1:nb_col) {
plot <- ggplot(table, aes(x = cat, y = .data[[names(table)[i]]],fill = cat)) +
geom_violin() +
geom_jitter(color = "black", alpha = 0.2) + scale_fill_manual(values =c("#E7B800","#4E84C4", "#FC4E07") )+
labs(x = parameters[i],y="")+ theme_bw() + guides(fill = FALSE)
plots[[i]] <- plot
}
plot_grid(plotlist = plots)+labs(caption=leg) +
theme(plot.caption = element_text(h=0,face = "bold.italic",size=10))
}
multivioplot(X, D1$GroupeACH, parameters = c("Pourcentages de voix Le Pen au 1er Tour",
"Part des individus ayant entre 18 et 24 ans",
"Part des diplômés du supérieur",
"Part des retraités",
"Densité de la population",
"Part des professions intermédiaires"),leg="Source : Insee, recensement de la population 2018 / Ministère de l'intérieur 2022")
multivioplot <- function(table, cat, parameters = colnames(data),leg) {
nb_col <- length(parameters)
# Conversion des couleurs
# Fonction de conversion des couleurs en hexadécimal
col2hex <- function(col, alpha = 1) {
rgb(t(col2rgb(col)), alpha = alpha * 255, maxColorValue = 255)
}
colors <- c("#E7B800", "#4E84C4", "#FC4E07") # col2hex(col)
# Affichage
plots <- list()
for (i in 1:nb_col) {
plot <- ggplot(table, aes(x = cat, y = .data[[names(table)[i]]],fill = cat)) +
geom_violin() +
geom_jitter(color = "black", alpha = 0.2) + scale_fill_manual(values =c("#E7B800","#4E84C4", "#FC4E07") )+
labs(x = parameters[i],y="")+ theme_bw() + guides(fill = FALSE) theme(axis.text=element_text(face="bold"),axis.title=element_text(face="bold"))
multivioplot <- function(table, cat, parameters = colnames(data),leg) {
nb_col <- length(parameters)
# Conversion des couleurs
# Fonction de conversion des couleurs en hexadécimal
col2hex <- function(col, alpha = 1) {
rgb(t(col2rgb(col)), alpha = alpha * 255, maxColorValue = 255)
}
colors <- c("#E7B800", "#4E84C4", "#FC4E07") # col2hex(col)
# Affichage
plots <- list()
for (i in 1:nb_col) {
plot <- ggplot(table, aes(x = cat, y = .data[[names(table)[i]]],fill = cat)) +
geom_violin() +
geom_jitter(color = "black", alpha = 0.2) + scale_fill_manual(values =c("#E7B800","#4E84C4", "#FC4E07") )+
labs(x = parameters[i],y="")+ theme_bw() + guides(fill = FALSE) +theme(axis.text=element_text(face="bold"),axis.title=element_text(face="bold"))
plots[[i]] <- plot
}
plot_grid(plotlist = plots)+labs(caption=leg) +
theme(plot.caption = element_text(h=0,face = "bold.italic",size=10))
}
multivioplot(X, D1$GroupeACH, parameters = c("Pourcentages de voix Le Pen au 1er Tour","Part des individus ayant entre 18 et 24 ans","Part des diplômés du supérieur","Part des retraités","Densité de la population","Part des professions intermédiaires"),leg="Source : Insee, recensement de la population 2018 / Ministère de l'intérieur 2022")
multivioplot <- function(table, cat, parameters = colnames(data),leg) {
nb_col <- length(parameters)
# Conversion des couleurs
# Fonction de conversion des couleurs en hexadécimal
col2hex <- function(col, alpha = 1) {
rgb(t(col2rgb(col)), alpha = alpha * 255, maxColorValue = 255)
}
colors <- c("#E7B800", "#4E84C4", "#FC4E07") # col2hex(col)
# Affichage
plots <- list()
for (i in 1:nb_col) {
plot <- ggplot(table, aes(x = cat, y = .data[[names(table)[i]]],fill = cat)) +
geom_violin(scale = "width") +
geom_jitter(color = "black", alpha = 0.2) + scale_fill_manual(values =c("#E7B800","#4E84C4", "#FC4E07") )+
labs(x = parameters[i],y="")+ theme_bw() + guides(fill = FALSE) +theme(axis.text=element_text(face="bold"),axis.title=element_text(face="bold"))
plots[[i]] <- plot
}
plot_grid(plotlist = plots)+labs(caption=leg) +
theme(plot.caption = element_text(h=0,face = "bold.italic",size=10))
}
multivioplot(X, D1$GroupeACH, parameters = c("Pourcentages de voix Le Pen au 1er Tour","Part des individus ayant entre 18 et 24 ans","Part des diplômés du supérieur","Part des retraités","Densité de la population","Part des professions intermédiaires"),leg="Source : Insee, recensement de la population 2018 / Ministère de l'intérieur 2022")
multivioplot <- function(table, cat, parameters = colnames(data),leg) {
nb_col <- length(parameters)
# Conversion des couleurs
# Fonction de conversion des couleurs en hexadécimal
col2hex <- function(col, alpha = 1) {
rgb(t(col2rgb(col)), alpha = alpha * 255, maxColorValue = 255)
}
colors <- c("#E7B800", "#4E84C4", "#FC4E07") # col2hex(col)
# Affichage
plots <- list()
for (i in 1:nb_col) {
plot <- ggplot(table, aes(x = cat, y = .data[[names(table)[i]]],fill = cat)) +
geom_violin() +geom_boxplot(width=0.1)+
geom_jitter(color = "black", alpha = 0.2) + scale_fill_manual(values =c("#E7B800","#4E84C4", "#FC4E07") )+
labs(x = parameters[i],y="")+ theme_bw() + guides(fill = FALSE) +theme(axis.text=element_text(face="bold"),axis.title=element_text(face="bold"))
plots[[i]] <- plot
}
plot_grid(plotlist = plots)+labs(caption=leg) +
theme(plot.caption = element_text(h=0,face = "bold.italic",size=10))
}
multivioplot(X, D1$GroupeACH, parameters = c("Pourcentages de voix Le Pen au 1er Tour","Part des individus ayant entre 18 et 24 ans","Part des diplômés du supérieur","Part des retraités","Densité de la population","Part des professions intermédiaires"),leg="Source : Insee, recensement de la population 2018 / Ministère de l'intérieur 2022")
multivioplot <- function(table, cat, parameters = colnames(data),leg) {
nb_col <- length(parameters)
# Conversion des couleurs
# Fonction de conversion des couleurs en hexadécimal
col2hex <- function(col, alpha = 1) {
rgb(t(col2rgb(col)), alpha = alpha * 255, maxColorValue = 255)
}
colors <- c("#E7B800", "#4E84C4", "#FC4E07") # col2hex(col)
# Affichage
plots <- list()
for (i in 1:nb_col) {
plot <- ggplot(table, aes(x = cat, y = .data[[names(table)[i]]],fill = cat)) +
geom_violin() +geom_boxplot(width=0.1)+
geom_jitter(color = "black", alpha = 0.1) + scale_fill_manual(values =c("#E7B800","#4E84C4", "#FC4E07") )+
labs(x = parameters[i],y="")+ theme_bw() + guides(fill = FALSE) +theme(axis.text=element_text(face="bold"),axis.title=element_text(face="bold"))
plots[[i]] <- plot
}
plot_grid(plotlist = plots)+labs(caption=leg) +
theme(plot.caption = element_text(h=0,face = "bold.italic",size=10))
}
multivioplot(X, D1$GroupeACH, parameters = c("Pourcentages de voix Le Pen au 1er Tour","Part des individus ayant entre 18 et 24 ans","Part des diplômés du supérieur","Part des retraités","Densité de la population","Part des professions intermédiaires"),leg="Source : Insee, recensement de la population 2018 / Ministère de l'intérieur 2022")
multivioplot <- function(table, cat, parameters = colnames(data),leg) {
nb_col <- length(parameters)
# Conversion des couleurs
# Fonction de conversion des couleurs en hexadécimal
col2hex <- function(col, alpha = 1) {
rgb(t(col2rgb(col)), alpha = alpha * 255, maxColorValue = 255)
}
colors <- c("#E7B800", "#4E84C4", "#FC4E07") # col2hex(col)
# Affichage
plots <- list()
for (i in 1:nb_col) {
plot <- ggplot(table, aes(x = cat, y = .data[[names(table)[i]]],color = cat)) +
geom_violin() +geom_boxplot(width=0.1)+
geom_jitter(color = "black", alpha = 0.1) + scale_fill_manual(values =c("#E7B800","#4E84C4", "#FC4E07") )+
labs(x = parameters[i],y="")+ theme_bw() + guides(fill = FALSE) +theme(axis.text=element_text(face="bold"),axis.title=element_text(face="bold"))
plots[[i]] <- plot
}
plot_grid(plotlist = plots)+labs(caption=leg) +
theme(plot.caption = element_text(h=0,face = "bold.italic",size=10))
}
multivioplot(X, D1$GroupeACH, parameters = c("Pourcentages de voix Le Pen au 1er Tour","Part des individus ayant entre 18 et 24 ans","Part des diplômés du supérieur","Part des retraités","Densité de la population","Part des professions intermédiaires"),leg="Source : Insee, recensement de la population 2018 / Ministère de l'intérieur 2022")
multivioplot <- function(table, cat, parameters = colnames(data),leg) {
nb_col <- length(parameters)
# Conversion des couleurs
# Fonction de conversion des couleurs en hexadécimal
col2hex <- function(col, alpha = 1) {
rgb(t(col2rgb(col)), alpha = alpha * 255, maxColorValue = 255)
}
colors <- c("#E7B800", "#4E84C4", "#FC4E07") # col2hex(col)
# Affichage
plots <- list()
for (i in 1:nb_col) {
plot <- ggplot(table, aes(x = cat, y = .data[[names(table)[i]]],fill = cat)) +
geom_violin() +geom_boxplot(width=0.1)+
geom_jitter(color = "black", alpha = 0.1) + scale_fill_manual(values =c("#E7B800","#4E84C4", "#FC4E07") )+
labs(x = parameters[i],y="")+ theme_bw() + guides(fill = FALSE) +theme(axis.text=element_text(face="bold"),axis.title=element_text(face="bold"))
plots[[i]] <- plot
}
plot_grid(plotlist = plots)+labs(caption=leg) +
theme(plot.caption = element_text(h=0,face = "bold.italic",size=10))
}
multivioplot(X, D1$GroupeACH, parameters = c("Pourcentages de voix Le Pen au 1er Tour","Part des individus ayant entre 18 et 24 ans","Part des diplômés du supérieur","Part des retraités","Densité de la population","Part des professions intermédiaires"),leg="Source : Insee, recensement de la population 2018 / Ministère de l'intérieur 2022")
multivioplot <- function(table, cat, parameters = colnames(data),leg) {
nb_col <- length(parameters)
# Conversion des couleurs
# Fonction de conversion des couleurs en hexadécimal
col2hex <- function(col, alpha = 1) {
rgb(t(col2rgb(col)), alpha = alpha * 255, maxColorValue = 255)
}
colors <- c("#E7B800", "#4E84C4", "#FC4E07") # col2hex(col)
# Affichage
plots <- list()
for (i in 1:nb_col) {
plot <- ggplot(table, aes(x = cat, y = .data[[names(table)[i]]],fill = cat)) +
geom_violin(trim = FALSE) +geom_boxplot(width=0.1)+
geom_jitter(color = "black", alpha = 0.1) + scale_fill_manual(values =c("#E7B800","#4E84C4", "#FC4E07") )+
labs(x = parameters[i],y="")+ theme_bw() + guides(fill = FALSE) +theme(axis.text=element_text(face="bold"),axis.title=element_text(face="bold"))
plots[[i]] <- plot
}
plot_grid(plotlist = plots)+labs(caption=leg) +
theme(plot.caption = element_text(h=0,face = "bold.italic",size=10))
}
multivioplot(X, D1$GroupeACH, parameters = c("Pourcentages de voix Le Pen au 1er Tour","Part des individus ayant entre 18 et 24 ans","Part des diplômés du supérieur","Part des retraités","Densité de la population","Part des professions intermédiaires"),leg="Source : Insee, recensement de la population 2018 / Ministère de l'intérieur 2022")
multivioplot <- function(table, cat, parameters = colnames(data),leg) {
nb_col <- length(parameters)
# Conversion des couleurs
# Fonction de conversion des couleurs en hexadécimal
col2hex <- function(col, alpha = 1) {
rgb(t(col2rgb(col)), alpha = alpha * 255, maxColorValue = 255)
}
colors <- c("#E7B800", "#4E84C4", "#FC4E07") # col2hex(col)
# Affichage
plots <- list()
for (i in 1:nb_col) {
plot <- ggplot(table, aes(x = cat, y = .data[[names(table)[i]]],fill = cat)) +
geom_violin(trim = FALSE) +geom_boxplot(width=0.2)+
geom_jitter(color = "black", alpha = 0.1) + scale_fill_manual(values =c("#E7B800","#4E84C4", "#FC4E07") )+
labs(x = parameters[i],y="")+ theme_bw() + guides(fill = FALSE) +theme(axis.text=element_text(face="bold"),axis.title=element_text(face="bold"))
plots[[i]] <- plot
}
plot_grid(plotlist = plots)+labs(caption=leg) +
theme(plot.caption = element_text(h=0,face = "bold.italic",size=10))
}
multivioplot(X, D1$GroupeACH, parameters = c("Pourcentages de voix Le Pen au 1er Tour","Part des individus ayant entre 18 et 24 ans","Part des diplômés du supérieur","Part des retraités","Densité de la population","Part des professions intermédiaires"),leg="Source : Insee, recensement de la population 2018 / Ministère de l'intérieur 2022")
multivioplot <- function(table, cat, parameters = colnames(data),leg) {
nb_col <- length(parameters)
# Conversion des couleurs
# Fonction de conversion des couleurs en hexadécimal
col2hex <- function(col, alpha = 1) {
rgb(t(col2rgb(col)), alpha = alpha * 255, maxColorValue = 255)
}
colors <- c("#E7B800", "#4E84C4", "#FC4E07") # col2hex(col)
# Affichage
plots <- list()
for (i in 1:nb_col) {
plot <- ggplot(table, aes(x = cat, y = .data[[names(table)[i]]])) +
geom_violin(aes(fill = cat),trim = FALSE) +geom_boxplot(width=0.1)+
geom_jitter(color = "black", alpha = 0.1) + scale_fill_manual(values =c("#E7B800","#4E84C4", "#FC4E07") )+
labs(x = parameters[i],y="")+ theme_bw() + guides(fill = FALSE) +theme(axis.text=element_text(face="bold"),axis.title=element_text(face="bold"))
plots[[i]] <- plot
}
plot_grid(plotlist = plots)+labs(caption=leg) +
theme(plot.caption = element_text(h=0,face = "bold.italic",size=10))
}
multivioplot(X, D1$GroupeACH, parameters = c("Pourcentages de voix Le Pen au 1er Tour","Part des individus ayant entre 18 et 24 ans","Part des diplômés du supérieur","Part des retraités","Densité de la population","Part des professions intermédiaires"),leg="Source : Insee, recensement de la population 2018 / Ministère de l'intérieur 2022")
multivioplot <- function(table, cat, parameters = colnames(data),leg) {
nb_col <- length(parameters)
# Conversion des couleurs
# Fonction de conversion des couleurs en hexadécimal
col2hex <- function(col, alpha = 1) {
rgb(t(col2rgb(col)), alpha = alpha * 255, maxColorValue = 255)
}
colors <- c("#E7B800", "#4E84C4", "#FC4E07") # col2hex(col)
# Affichage
plots <- list()
for (i in 1:nb_col) {
plot <- ggplot(table, aes(x = cat, y = .data[[names(table)[i]]])) +
geom_violin(aes(fill = cat),trim = FALSE) +geom_boxplot(width=0.1)+
scale_fill_manual(values =c("#E7B800","#4E84C4", "#FC4E07") )+
labs(x = parameters[i],y="")+ theme_bw() + guides(fill = FALSE) +theme(axis.text=element_text(face="bold"),axis.title=element_text(face="bold"))
plots[[i]] <- plot
}
plot_grid(plotlist = plots)+labs(caption=leg) +
theme(plot.caption = element_text(h=0,face = "bold.italic",size=10))
}
multivioplot(X, D1$GroupeACH, parameters = c("Pourcentages de voix Le Pen au 1er Tour","Part des individus ayant entre 18 et 24 ans","Part des diplômés du supérieur","Part des retraités","Densité de la population","Part des professions intermédiaires"),leg="Source : Insee, recensement de la population 2018 / Ministère de l'intérieur 2022")
multivioplot <- function(table, cat, parameters = colnames(data),leg) {
nb_col <- length(parameters)
# Conversion des couleurs
# Fonction de conversion des couleurs en hexadécimal
col2hex <- function(col, alpha = 1) {
rgb(t(col2rgb(col)), alpha = alpha * 255, maxColorValue = 255)
}
colors <- c("#E7B800", "#4E84C4", "#FC4E07") # col2hex(col)
# Affichage
plots <- list()
for (i in 1:nb_col) {
plot <- ggplot(table, aes(x = cat, y = .data[[names(table)[i]]])) +
geom_violin(aes(fill = cat),draw_quantiles = c(0.25, 0.5, 0.75),trim = FALSE) +geom_boxplot(width=0.1)+
scale_fill_manual(values =c("#E7B800","#4E84C4", "#FC4E07") )+
labs(x = parameters[i],y="")+ theme_bw() + guides(fill = FALSE) +theme(axis.text=element_text(face="bold"),axis.title=element_text(face="bold"))
plots[[i]] <- plot
}
plot_grid(plotlist = plots)+labs(caption=leg) +
theme(plot.caption = element_text(h=0,face = "bold.italic",size=10))
}
multivioplot(X, D1$GroupeACH, parameters = c("Pourcentages de voix Le Pen au 1er Tour","Part des individus ayant entre 18 et 24 ans","Part des diplômés du supérieur","Part des retraités","Densité de la population","Part des professions intermédiaires"),leg="Source : Insee, recensement de la population 2018 / Ministère de l'intérieur 2022")
multivioplot <- function(table, cat, parameters = colnames(data),leg) {
nb_col <- length(parameters)
# Conversion des couleurs
# Fonction de conversion des couleurs en hexadécimal
col2hex <- function(col, alpha = 1) {
rgb(t(col2rgb(col)), alpha = alpha * 255, maxColorValue = 255)
}
colors <- c("#E7B800", "#4E84C4", "#FC4E07") # col2hex(col)
# Affichage
plots <- list()
for (i in 1:nb_col) {
plot <- ggplot(table, aes(x = cat, y = .data[[names(table)[i]]])) +
geom_violin(aes(fill = cat),trim = FALSE,adjust = .5) +geom_boxplot(width=0.1)+
scale_fill_manual(values =c("#E7B800","#4E84C4", "#FC4E07") )+
labs(x = parameters[i],y="")+ theme_bw() + guides(fill = FALSE) +theme(axis.text=element_text(face="bold"),axis.title=element_text(face="bold"))
plots[[i]] <- plot
}
plot_grid(plotlist = plots)+labs(caption=leg) +
theme(plot.caption = element_text(h=0,face = "bold.italic",size=10))
}
multivioplot(X, D1$GroupeACH, parameters = c("Pourcentages de voix Le Pen au 1er Tour","Part des individus ayant entre 18 et 24 ans","Part des diplômés du supérieur","Part des retraités","Densité de la population","Part des professions intermédiaires"),leg="Source : Insee, recensement de la population 2018 / Ministère de l'intérieur 2022")
multivioplot <- function(table, cat, parameters = colnames(data),leg) {
nb_col <- length(parameters)
# Conversion des couleurs
# Fonction de conversion des couleurs en hexadécimal
col2hex <- function(col, alpha = 1) {
rgb(t(col2rgb(col)), alpha = alpha * 255, maxColorValue = 255)
}
colors <- c("#E7B800", "#4E84C4", "#FC4E07") # col2hex(col)
# Affichage
plots <- list()
for (i in 1:nb_col) {
plot <- ggplot(table, aes(x = cat, y = .data[[names(table)[i]]])) +
geom_violin(aes(fill = cat),trim = FALSE) +geom_boxplot(width=0.1)+
scale_fill_manual(values =c("#E7B800","#4E84C4", "#FC4E07") )+
labs(x = parameters[i],y="")+ theme_bw() + guides(fill = FALSE) +theme(axis.text=element_text(face="bold"),axis.title=element_text(face="bold"))
plots[[i]] <- plot
}
plot_grid(plotlist = plots)+labs(caption=leg) +
theme(plot.caption = element_text(h=0,face = "bold.italic",size=10))
}
multivioplot(X, D1$GroupeACH, parameters = c("Pourcentages de voix Le Pen au 1er Tour","Part des individus ayant entre 18 et 24 ans","Part des diplômés du supérieur","Part des retraités","Densité de la population","Part des professions intermédiaires"),leg="Source : Insee, recensement de la population 2018 / Ministère de l'intérieur 2022")
library(readxl)
library(haven)
library(FactoMineR)
library(factoextra)
library(tidyverse)
library(factoextra)
library(questionr)
library(missMDA)
library(cluster)
library(esquisse)
library(data.table)
library(sf)
library(cowplot)
library(vioplot)
library(ggrepel)
library(ineq)
library(weights)
library(colourpicker)
library(cartogram)
rm(list=ls())
getwd()
mon_repertoire<-"~/Desktop/ENSAI/Projet stat/R"
setwd(mon_repertoire)
T1_2<-read.table("T1_2.csv",sep=",",header=TRUE)
D1<-read.table("D1.csv",sep=",",header=TRUE)
D1<-D1[,c(1:6,10:28,7,8,9)]
Lab1<-c("Très peu denses","Peu denses","Densité intermédiaire","Densément peuplés")
Lab2<-c("Hors attraction","Aire de - de 50 000hab","Aire de 50 000 à - de 200 000 hab",
"Aire de 200 000 à - de 700 000 hab","Aire de 700 000 hab ou + hors Paris",
"Aire de Paris")
Lab3<-c("Non centre","Centre local", "Centre intermédiaires", "Centres structurant",
"Centre majeur")
T1_2[,35]<-factor(T1_2[,35], levels= unique(T1_2[,35]),labels=Lab1,exclude=NULL)
T1_2[,36]<-factor(T1_2[,36], levels= unique(T1_2[,36]),labels=Lab2,exclude=NULL)
T1_2[,37]<-factor(T1_2[,37], levels= unique(T1_2[,37]),labels=Lab3,exclude=NULL)
T1_2$Département<- as.factor(T1_2$Département)
questionr:::irec()
library(shiny)
library(tidyverse)
library(sf)
library(vioplot)
setwd("~/Desktop/ENSAI/R/Rshiny")
D1<-read.table("~/Desktop/ENSAI/Projet stat/R/D1.csv",sep=",",header=TRUE)
France <- readRDS("~/Desktop/ENSAI/Projet stat/R/gadm36_FRA_2_sf.rds")
France <- left_join(France, D1, by = c("NAME_2" = "Département"))  %>%st_set_crs(st_crs(4326))
generate_color_gradient <- function(color) {
# Convertir la couleur en format hexadécimal
hex_color <- grDevices::col2rgb(color, alpha = FALSE)
hex_color <- sprintf("#%02X%02X%02X", hex_color[1], hex_color[2], hex_color[3])
# Générer les 4 couleurs du gradient discret
colors <- c(color)
for (i in 1:3) {
gradient_color <- adjustcolor(hex_color, alpha.f = 1 - (i * 0.25))
colors <- c(colors, gradient_color)
}
return(rev(colors))
}
generate_random_color <- function() {
# Générer trois nombres aléatoires entre 0 et 255 pour les composantes RGB
red <- sample(10:230, 1)
green <- sample(10:230, 1)
blue <- sample(10:230, 1)
# Convertir les composantes en format hexadécimal
hex_color <- sprintf("#%02X%02X%02X", red, green, blue)
return(hex_color)
}
FQuantile1_2<-function(var,quant){
Quantile<-as_tibble(quantile(D1[[var]], probs=seq(0,1,1/quant),na.rm=TRUE))
num<-which(colnames(D1)==var)
A<-subset(D1, D1[,num]<=as.numeric(Quantile[2,1]) & D1[,num]>=as.numeric(Quantile[1,1]))
D1$Tranche<<- ifelse(D1$Département %in% A$Département,"1","0")
r<-c(weighted.mean(A$Voix_Le_Pen,A$Exprimés),weighted.mean(A$Voix_Macron,A$Exprimés),weighted.mean(A$Voix_Mélenchon,A$Exprimés))
for (i in 2:quant) {
A<-subset(D1, D1[,num]<=as.numeric(Quantile[i+1,1]) & D1[,num]>as.numeric(Quantile[i,1]))
D1$Tranche<<- ifelse(D1$Département %in% A$Département,i,D1$Tranche)
r<-rbind(r,c(weighted.mean(A$Voix_Le_Pen,A$Exprimés),weighted.mean(A$Voix_Macron,A$Exprimés),weighted.mean(A$Voix_Mélenchon,A$Exprimés)))
}
Quantile<-Quantile[-1,]
Quantile<-cbind(Quantile,r,seq(1:quant))
ifelse(quant==100,colnames(Quantile)<-c("Centiles","Moyenne Le Pen","Moyenne Macron","Moyenne Mélenchon",paste("Tranches_Centiles_",var,sep="")),
colnames(Quantile)<-c("Déciles","Moyenne Le Pen","Moyenne Macron","Moyenne Mélenchon",paste("Tranches_Déciles_",var,sep="")))
return(Quantile)
}
runApp()
shiny::runApp('~/Desktop/ENSAI/R/Rshiny')
runApp("~/Desktop/ENSAI/R/Rshiny/app.R", display.mode = "showcase")
runApp('~/Desktop/ENSAI/R/Rshiny')
runApp('~/Desktop/ENSAI/R/Rshiny')
library(haven)
library(FactoMineR)
library(factoextra)
library(tidyverse)
library(factoextra)
library(questionr)
library(missMDA)
library(cluster)
library(esquisse)
library(data.table)
library(sf)
library(cowplot)
library(vioplot)
library(ggrepel)
library(ineq)
library(weights)
library(colourpicker)
library(cartogram)
rm(list=ls())
getwd()
mon_repertoire<-"~/Desktop/ENSAI/Projet stat/R"
setwd(mon_repertoire)
T1_2<-read.table("T1_2.csv",sep=",",header=TRUE)
D1<-read.table("D1.csv",sep=",",header=TRUE)
D1<-D1[,c(1:6,10:28,7,8,9)]
Lab1<-c("Très peu denses","Peu denses","Densité intermédiaire","Densément peuplés")
Lab2<-c("Hors attraction","Aire de - de 50 000hab","Aire de 50 000 à - de 200 000 hab",
"Aire de 200 000 à - de 700 000 hab","Aire de 700 000 hab ou + hors Paris",
"Aire de Paris")
Lab3<-c("Non centre","Centre local", "Centre intermédiaires", "Centres structurant",
"Centre majeur")
T1_2[,35]<-factor(T1_2[,35], levels= unique(T1_2[,35]),labels=Lab1,exclude=NULL)
T1_2[,36]<-factor(T1_2[,36], levels= unique(T1_2[,36]),labels=Lab2,exclude=NULL)
T1_2[,37]<-factor(T1_2[,37], levels= unique(T1_2[,37]),labels=Lab3,exclude=NULL)
T1_2$Département<- as.factor(T1_2$Département)
X<-D1[,c(6,7,21,16,24,15)]
CAH<-agnes(X,metric="euclidian",method = "ward",stand=TRUE)
D1$GroupeACH <- factor(cutree(CAH, k = 3),levels = 1:3,labels = paste("Groupe", 1: 3))
Moy_pond<-function(X,k){
clusProfile <- aggregate(X,by = list(D1$GroupeACH),mean)
for (i in names(X)){
for( j in 1:k){
clusProfile[j,i]<-weighted.mean(D1[D1$GroupeACH == levels(D1$GroupeACH)[j], ][[i]], D1[D1$GroupeACH == levels(D1$GroupeACH)[j], ]$Exprimés)
}
}
return(clusProfile)
}
clusProfile <-Moy_pond(X,3)
View(clusProfile)
clusLong <- pivot_longer(clusProfile, cols = -Groupe, names_to = "Variable", values_to = "Valeur")
colnames(clusProfile)[c(1,4)] <- c("Groupe","Diplomés_supérieur")
clusLong <- pivot_longer(clusProfile, cols = -Groupe, names_to = "Variable", values_to = "Valeur")
View(clusLong)
shiny::runApp('~/Desktop/ENSAI/R/Rshiny')
